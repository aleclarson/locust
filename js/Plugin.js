// Generated by CoffeeScript 1.12.7
var Plugin, Type, assertType, define, emptyFunction, isType, steal, sync, type;

emptyFunction = require("emptyFunction");

assertType = require("assertType");

isType = require("isType");

define = require("define");

steal = require("steal");

sync = require("sync");

Type = require("Type");

type = Type("Plugin");

type.defineArgs([String]);

type.defineValues(function(name) {
  return {
    name: name,
    _loaded: null
  };
});

type.defineProperties({
  _initModule: {
    lazy: function() {
      var initModule;
      initModule = this._callHook("initModule");
      if (!initModule) {
        return emptyFunction;
      }
      if (initModule instanceof Function) {
        return initModule;
      }
      throw TypeError("The '" + this.name + "' plugin failed to export an 'initModule' function!");
    }
  }
});

type.defineGetters({
  isLoaded: function() {
    return this._loaded !== null;
  },
  dependencies: function() {
    if (!this._loaded) {
      return null;
    }
    return this._loaded.dependencies || [];
  },
  globalDependencies: function() {
    if (!this._loaded) {
      return null;
    }
    return this._loaded.globalDependencies || [];
  }
});

type.defineMethods({
  initModule: function(mod, options) {
    return this._initModule(mod, options);
  },
  loadGlobals: function() {
    return this._callHook("loadGlobals");
  },
  loadCommands: function() {
    return this._callHook("loadCommands");
  },
  loadModuleMixin: function(type) {
    var mixin;
    if (mixin = this._callHook("loadModuleMixin")) {
      lotus.moduleMixins.push(mixin);
    }
  },
  loadFileMixin: function(type) {
    var mixin;
    if (mixin = this._callHook("loadFileMixin")) {
      lotus.fileMixins.push(mixin);
    }
  },
  _callHook: function(name, context, args) {
    var hook;
    if (!this.isLoaded) {
      throw Error("Must call 'plugin.load' first!");
    }
    if (!(hook = this._loaded[name])) {
      return null;
    }
    if (hook instanceof Function) {
      return hook.call(context, args);
    }
    throw TypeError("The '" + this.name + "' plugin failed to export a '" + name + "' function!");
  }
});

module.exports = Plugin = type.build();
